# Simple test for improved class export functionality
# This tests the basic features to ensure they work correctly

print("=== Testing Improved Class Export Functionality ===")
print()

# Import the improved plugin
import "../build/examples/class_export_plugin_improved.so"

print("1. Testing Vector2D class:")

# Create a vector instance
vec = class_export_plugin_improved.Vector2D(3.0, 4.0)
print("   Created vector:", vec.to_string())

# Test member access
print("   vec.x =", vec.x)
print("   vec.y =", vec.y)

# Test member modification
vec.x = 6.0
vec.y = 8.0
print("   After modification: vec.x =", vec.x, ", vec.y =", vec.y)

# Test method calls
print("   Magnitude =", vec.magnitude())
print("   String representation =", vec.to_string())

print()
print("2. Testing Rectangle class:")

# Create rectangle
rect = class_export_plugin_improved.Rectangle(5.0, 3.0)
print("   Created rectangle:", rect.to_string())

# Test members and methods
print("   width =", rect.width, ", height =", rect.height)
print("   area =", rect.area())
print("   perimeter =", rect.perimeter())
print("   is_square =", rect.is_square())

# Modify dimensions
rect.width = 4.0
rect.height = 4.0
print("   After making it square:", rect.to_string())
print("   is_square =", rect.is_square())

print()
print("3. Testing Counter class:")

# Create counter
counter = class_export_plugin_improved.Counter("test_counter", 10)
print("   Created counter:", counter.to_string())

# Test members
print("   name =", counter.name)
print("   value =", counter.value)

# Test methods
print("   increment() =", counter.increment())
print("   increment() =", counter.increment())
print("   Current value =", counter.value)

# Modify members
counter.name = "modified_counter"
counter.value = 100
print("   After modification:", counter.to_string())

print()
print("4. Testing default constructors:")

# Test default constructors
default_vec = class_export_plugin_improved.Vector2D()
default_rect = class_export_plugin_improved.Rectangle()
default_counter = class_export_plugin_improved.Counter()

print("   Default vector:", default_vec.to_string())
print("   Default rectangle:", default_rect.to_string())
print("   Default counter:", default_counter.to_string())

print()
print("=== All Tests Completed ===")
print("If you see this message, the basic functionality is working!")
