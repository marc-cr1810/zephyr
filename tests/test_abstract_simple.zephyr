# Test abstract classes without abstract methods first

abstract class Vehicle {
    speed : float = 0.0

    func accelerate(amount : float) {
        this.speed = this.speed + amount
    }

    func brake(amount : float) {
        this.speed = this.speed - amount
        if this.speed < 0.0 {
            this.speed = 0.0
        }
    }
}

class Car : Vehicle {
    func honk() {
        print("Beep beep!")
    }
}

# Test that abstract class with only concrete methods works
car = Car()
car.accelerate(50.0)
print("Car speed: " + str(car.speed))
car.brake(20.0)
print("Car speed after braking: " + str(car.speed))
car.honk()

# The following would cause an error if uncommented (cannot instantiate abstract class):
# vehicle = Vehicle()

print("Abstract class (without abstract methods) test passed!")
