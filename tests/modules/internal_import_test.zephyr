# test_internal_import.zephyr - Test that internal symbols cannot be imported

# Test that we can import public symbols from math_with_internal.zephyr
import add, PI from "./math_with_internal.zephyr"

print("Testing public symbol imports:")
print("Imported add(5, 3):", add(5, 3))
print("Imported PI:", PI)

# Try to import the internal function - this should fail
try {
    import secret_helper from "./math_with_internal.zephyr"
    print("ERROR: Should not be able to import internal function!")
} catch e {
    print("SUCCESS: Cannot import internal function:", e)
}

# Try namespace import and check if internal symbols are excluded
import * as math from "./math_with_internal.zephyr"

print("\nTesting namespace import excludes internal symbols:")
print("math has PI:", "PI" in math)
print("math has add:", "add" in math)
print("math has multiply:", "multiply" in math)
print("math has circle_area:", "circle_area" in math)
print("math has secret_helper:", "secret_helper" in math)

# Verify internal symbols are not in the namespace
if "secret_helper" in math {
    print("ERROR: Internal function found in namespace import!")
} else {
    print("SUCCESS: Internal function properly excluded from namespace")
}

print("\nInternal import test completed successfully!")
